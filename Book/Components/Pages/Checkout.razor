@page "/checkout"
@using System.ComponentModel.DataAnnotations
@inject Book.Services.CartService CartService
@inject NavigationManager NavigationManager

<h3>تکمیل خرید</h3>

@if (CartService.GetCartBooks().Count == 0)
{
    <p>سبد خرید شما خالی است.</p>
}
else
{
    <EditForm Model="orderModel" OnValidSubmit="HandleCheckout">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>نام و نام خانوادگی</label>
            <InputText @bind-Value="orderModel.FullName" class="form-control" />
        </div>

        <div class="form-group">
            <label>ایمیل</label>
            <InputText @bind-Value="orderModel.Email" type="email" class="form-control" />
        </div>

        <div class="form-group">
            <label>آدرس</label>
            <InputTextArea @bind-Value="orderModel.Address" class="form-control" />
        </div>

        <h4 class="mt-3">خلاصه سفارش</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>کتاب</th>
                    <th>قیمت</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in CartService.GetCartBooks())
                {
                    <tr>
                        <td>@book.Title</td>
                        <td>@book.Price تومان</td>
                    </tr>
                }
            </tbody>
        </table>

        <p><strong>مجموع:</strong> @CartService.GetTotalPrice() تومان</p>

        <button type="submit" class="btn btn-success">تکمیل خرید</button>
    </EditForm>
}

@code {
    private OrderModel orderModel = new();

    void HandleCheckout()
    {
        // خالی کردن سبد خرید
        CartService.ClearCart();

        // انتقال به صفحه تأیید سفارش
        NavigationManager.NavigateTo($"/order-confirmation?name={orderModel.FullName}");
    }

    public class OrderModel
    {
        [Required(ErrorMessage = "نام الزامی است")]
        public string FullName { get; set; }

        [Required(ErrorMessage = "ایمیل الزامی است")]
        [EmailAddress(ErrorMessage = "ایمیل معتبر وارد کنید")]
        public string Email { get; set; }

        [Required(ErrorMessage = "آدرس الزامی است")]
        public string Address { get; set; }
    }
}
